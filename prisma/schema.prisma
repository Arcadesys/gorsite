// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// NextAuth.js Models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  password      String?
  image         String?
  role          UserRole     @default(USER)
  accounts      Account[]
  sessions      Session[]
  commissions   Commission[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum UserRole {
  USER
  ADMIN
}

// Site Configuration Model
model SiteConfig {
  id                String   @id @default(cuid())
  siteName          String   @default("Gorath Artist Portfolio")
  siteDescription   String   @default("Digital Artist & Illustrator specializing in fantasy, sci-fi, and character art")
  primaryColor      String   @default("pink")
  secondaryColor    String   @default("purple")
  accentColor       String   @default("pink")
  logoUrl           String?
  faviconUrl        String?
  heroImageUrl      String?
  showGallery       Boolean  @default(true)
  showCommissions   Boolean  @default(true)
  showSocialFeed    Boolean  @default(true)
  showContact       Boolean  @default(true)
  customCss         String?
  customHtml        String?
  commissionTypes   String?  // Changed from Json to String for SQLite
  waitlistEnabled   Boolean  @default(false)
  waitlistMessage   String?
  termsAndConditions String?
  privacyPolicy     String?
  googleAnalyticsId String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

// Commission Models
model Commission {
  id              String            @id @default(cuid())
  clientName      String
  clientEmail     String
  description     String
  type            String
  status          CommissionStatus  @default(REQUESTED)
  paymentStatus   PaymentStatus     @default(PENDING)
  priority        CommissionPriority @default(NORMAL)
  price           Float?
  depositPaid     Boolean           @default(false)
  finalPaid       Boolean           @default(false)
  startDate       DateTime?
  dueDate         DateTime?
  completedDate   DateTime?
  attachments     String            // Changed from String[] to String for SQLite
  notes           String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  queuePosition   Int?
  queue           CommissionQueue?  @relation(fields: [queueId], references: [id])
  queueId         String?
  user            User?             @relation(fields: [userId], references: [id])
  userId          String?
}

model CommissionQueue {
  id                String       @id @default(cuid())
  name              String       @default("Default Queue")
  description       String?
  isActive          Boolean      @default(true)
  estimatedWaitTime Int?         // in days
  commissions       Commission[]
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

enum CommissionStatus {
  REQUESTED
  APPROVED
  IN_PROGRESS
  REVISION
  COMPLETED
  DELIVERED
  CANCELLED
  REJECTED
}

enum PaymentStatus {
  PENDING
  DEPOSIT_PAID
  PAID
  REFUNDED
}

enum CommissionPriority {
  LOW
  NORMAL
  HIGH
  URGENT
}
